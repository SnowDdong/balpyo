else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
zone_info2
library(ggplot2)
library(dplyr)
library(ggcorrplot)
library(ggthemes)
# 데이터 불러오기
df <-read.csv("cj_schoolzone_Data2.csv", header=T, stringsAsFactors=F)
df
# 필요한 데이터만 추출
data = df[,c('지역구', '대상시설명', '신호등', 'CCTV설치여부', '발생건수', '사망자수')]
# 데이터 변수 이름 변경 -- 한글 너무 길어서
data <- rename(data, gu='지역구', zone='대상시설명', lamp='신호등',cctv='CCTV설치여부',
cnt_a='발생건수', cnt_d='사망자수')
head(data)
# 데이터에 수치 부여
data$lamp <- ifelse(data$lamp == "Y", 1, 0)
data$cctv <- ifelse(data$cctv == "Y", 1, 0)
data$zone <- ifelse(data$zone == "", 0, 1)
data <- data[,c('gu','zone','lamp','cctv','cnt_a','cnt_d')]
# 데이터별 합계
data_sum <- data %>%
group_by(gu) %>%
summarise(zone = sum(zone),
lamp = sum(lamp),
cctv = sum(cctv),
cnt_a = sum(cnt_a),
cnt_d = sum(cnt_d))
data_sum
library(ggplot2)
library(dplyr)
library(corrplot)
library(readxl)
library(stringr) # 문자열 처리를 위한 라이브러리
#################################
# 1. 데이터 불러오기
#################################
accident <-read.csv("12_19_schoolzone.csv", header=T, stringsAsFactors=F)
zone_info <-read.csv("충청북도_청주시_어린이보호구역_20200717_1594961127925_45579.csv", header=T, stringsAsFactors=F)
lamp_info <-read.csv("충청북도_청주시_신호등정보_20191007.csv", header=T, stringsAsFactors=F)
# 전국 스쿨존 사고 중 청주 데이터만 추출 "청주"가 들어있는 데이터만 추출
accident <- accident[str_detect(accident$"시도시군구명",'청주'),]
# 스쿨존 중복 정보 제거 (ex) 초등학교 부설 유치원
# == 소재지지번주소가 같은 것을 중복으로 보고 하나만 남김
zone_info2 = zone_info[-which(duplicated(zone_info$"소재지지번주소")),]
# 특수학교 및 초등학교 단어 처리
# == 초등학교, 초교 --> '초'로 변경 / (특수) 등의 문자를 없애줌
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초등학교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"(특수)","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주분원","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주","")
# 신호등 정보에 결측치 제거, ""으로 된 공백 데이터도 제거
lamp_info <- lamp_info %>% filter(!is.na('교차로')) # 결측치 제거
lamp_info <- lamp_info %>% filter(lamp_info$'교차로'!="") #공백 데이터도 제거
#사고 데이터를 스쿨존 단위로 집계
data_acc <- accident %>% group_by(지점명) %>% summarise(cnt_a = sum(발생건수),cnt_d = sum(사망자수))
data_acc
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
lamp_info$'교차로'
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
i <- 1  # 신호등 정보 벡터의 인덱스
for (zone in zones){
lamp[i] = ifelse(lamp_info %>% filter(str_detect(교차로, zone)) %>% nrow > 0, 'Y','N')
i <- i+1
}
zone_info2$'신호등' <- lamp # 스쿨존 정보에 '신호등' 컬럼으로 설정
zone_info2
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
zone_info2$'지역구'
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
i <- 1  # 벡터의 인덱스
acci = c()
dead = c()
for (zone in zones){
area = areas[i]
row <- data_acc[str_detect(data_acc$지점명, zone) & str_detect(data_acc$지점명, area),]
if(count(row)>0){
acci[i] <- sum(row$cnt_a)
dead[i] <- sum(row$cnt_d)
}
else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
library(ggplot2)
library(dplyr)
library(ggcorrplot)
library(ggthemes)
# 데이터 불러오기
df <-read.csv("cj_schoolzone_Data2.csv", header=T, stringsAsFactors=F)
df
# 필요한 데이터만 추출
data = df[,c('지역구', '대상시설명', '신호등', 'CCTV설치여부', '발생건수', '사망자수')]
# 데이터 변수 이름 변경 -- 한글 너무 길어서
data <- rename(data, gu='지역구', zone='대상시설명', lamp='신호등',cctv='CCTV설치여부',
cnt_a='발생건수', cnt_d='사망자수')
head(data)
# 데이터에 수치 부여
data$lamp <- ifelse(data$lamp == "Y", 1, 0)
data$cctv <- ifelse(data$cctv == "Y", 1, 0)
data$zone <- ifelse(data$zone == "", 0, 1)
data <- data[,c('gu','zone','lamp','cctv','cnt_a','cnt_d')]
# 데이터별 합계
data_sum <- data %>%
group_by(gu) %>%
summarise(zone = sum(zone),
lamp = sum(lamp),
cctv = sum(cctv),
cnt_a = sum(cnt_a),
cnt_d = sum(cnt_d))
data_sum
# 지역구별 스쿨존 갯수 (bar 그래프)
ggplot(data_sum) +
aes(x=gu, y=zone, fill=gu) +
geom_col(width = 0.7) +
theme_economist_white() +
scale_fill_brewer(palette = "Set2") +
ggtitle("★청주시★  지역구별 스쿨존 수") +
xlab("지역구") + ylab("스쿨존 수") + labs(fill="지역구")
#지역구별 데이터 (line 그래프)
ggplot(data_sum) +
geom_line(aes(x=gu, y=zone, color="royalblue"),size=3, group = 1) +
geom_line(aes(x=gu, y=lamp, color="orange"),size=3, group=2) +
geom_line(aes(x=gu, y=cctv, color="greenyellow"),size=3, group=3) +
geom_line(aes(x=gu, y=cnt_a, color="darkcyan"),size=3, group=4) +
geom_line(aes(x=gu, y=cnt_d, color="violetred"),size=3, group=5) +
theme_bw() +
ggtitle("★청주시★  지역구별 데이터") +
xlab("지역구") + ylab("각종 데이터 (건)수") +
scale_color_discrete(name="범례",labels = c("교통사고(건)", "CCTV 설치 수",
"신호등 설치 수", "스쿨존 수", "사망자 수", "어린이 수"))
# 청주시 어린이 인구 수 추가 (단위 천명)
data_sum$kids = c(21.40,20.14,26.67,32.34)
data_sum
# 어린이 인구 추가된 지역구별 데이터 (line 그래프)
ggplot(data_sum)+
geom_line(aes(x=gu, y=zone, color="royalblue"),size=3, group = 1) +
geom_line(aes(x=gu, y=lamp, color="orange"),size=3, group=2) +
geom_line(aes(x=gu, y=cctv, color="greenyellow"),size=3, group=3) +
geom_line(aes(x=gu, y=cnt_a, color="darkcyan"),size=3, group=4) +
geom_line(aes(x=gu, y=cnt_d, color="violetred"),size=3, group=5) +
geom_line(aes(x=gu, y=kids, color="yellow"), size=3, group=6) +
theme_bw() +
ggtitle("★청주시★  지역구별 데이터(어린이 수 추가)") +
xlab("지역구") + ylab("각 데이터 건(수)") +
scale_color_discrete(name="범례",labels = c("교통사고(건)", "CCTV 설치 수",
"신호등 설치 수", "스쿨존 수", "사망자 수", "어린이 수"))
# 상관분석 데이터
data_sum$kids_r = round(data_sum$kids / data_sum$zone,3)
data_sum$lamp_r = round(data_sum$lamp / data_sum$zone,3)
data_sum$cctv_r = round(data_sum$cctv / data_sum$zone,3)
data_sum$cnt_a_r = round(data_sum$cnt_a / data_sum$zone,3)
data_sum$cnt_d_r = round(data_sum$cnt_d / data_sum$zone,3)
data_sum
df <- data_sum[, c("kids_r","lamp_r","cctv_r","cnt_a_r")]
df
# 상관분석 함수 적용
df_cor <- cor(df)
df_cor
# 히트맵
ggcorrplot(df_cor,
method="square",
type="lower",
show.legend=T,
legend.title="Pearson\nCorrelation",
show.diag=T,
outline.color="white",
lab=T,
lab_size = 5,
title="Correlation Heatmap",
tl.cex=12,
colors=c(low="yellow",
mid="white",
high="gold"),
ggtheme=ggplot2::theme_bw())
library(ggplot2)
library(dplyr)
library(corrplot)
library(readxl)
library(stringr) # 문자열 처리를 위한 라이브러리
#################################
# 1. 데이터 불러오기
#################################
accident <-read.csv("12_19_schoolzone.csv", header=T, stringsAsFactors=F)
zone_info <-read.csv("충청북도_청주시_어린이보호구역_20200717_1594961127925_45579.csv", header=T, stringsAsFactors=F)
lamp_info <-read.csv("충청북도_청주시_신호등정보_20191007.csv", header=T, stringsAsFactors=F)
# 전국 스쿨존 사고 중 청주 데이터만 추출 "청주"가 들어있는 데이터만 추출
accident <- accident[str_detect(accident$"시도시군구명",'청주'),]
# 스쿨존 중복 정보 제거 (ex) 초등학교 부설 유치원
# == 소재지지번주소가 같은 것을 중복으로 보고 하나만 남김
zone_info2 = zone_info[-which(duplicated(zone_info$"소재지지번주소")),]
# 특수학교 및 초등학교 단어 처리
# == 초등학교, 초교 --> '초'로 변경 / (특수) 등의 문자를 없애줌
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초등학교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"(특수)","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주분원","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주","")
# 신호등 정보에 결측치 제거, ""으로 된 공백 데이터도 제거
lamp_info <- lamp_info %>% filter(!is.na('교차로')) # 결측치 제거
lamp_info <- lamp_info %>% filter(lamp_info$'교차로'!="") #공백 데이터도 제거
#사고 데이터를 스쿨존 단위로 집계
data_acc <- accident %>% group_by(지점명) %>% summarise(cnt_a = sum(발생건수),cnt_d = sum(사망자수))
head(data_acc)
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
lamp_info$'교차로'
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
i <- 1  # 신호등 정보 벡터의 인덱스
for (zone in zones){
lamp[i] = ifelse(lamp_info %>% filter(str_detect(교차로, zone)) %>% nrow > 0, 'Y','N')
i <- i+1
}
zone_info2$'신호등' <- lamp # 스쿨존 정보에 '신호등' 컬럼으로 설정
zone_info2
head(zone_info2)
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
zone_info2$'지역구'
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
head(zone_info2$'지역구')
zone_info2$'지역구'
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
i <- 1  # 벡터의 인덱스
acci = c()
dead = c()
for (zone in zones){
area = areas[i]
row <- data_acc[str_detect(data_acc$지점명, zone) & str_detect(data_acc$지점명, area),]
if(count(row)>0){
acci[i] <- sum(row$cnt_a)
dead[i] <- sum(row$cnt_d)
}
else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
library(ggplot2)
library(dplyr)
library(corrplot)
library(readxl)
library(stringr) # 문자열 처리를 위한 라이브러리
#################################
# 1. 데이터 불러오기
#################################
accident <-read.csv("12_19_schoolzone.csv", header=T, stringsAsFactors=F)
zone_info <-read.csv("충청북도_청주시_어린이보호구역_20200717_1594961127925_45579.csv", header=T, stringsAsFactors=F)
lamp_info <-read.csv("충청북도_청주시_신호등정보_20191007.csv", header=T, stringsAsFactors=F)
# 전국 스쿨존 사고 중 청주 데이터만 추출 "청주"가 들어있는 데이터만 추출
accident <- accident[str_detect(accident$"시도시군구명",'청주'),]
# 스쿨존 중복 정보 제거 (ex) 초등학교 부설 유치원
# == 소재지지번주소가 같은 것을 중복으로 보고 하나만 남김
zone_info2 = zone_info[-which(duplicated(zone_info$"소재지지번주소")),]
# 특수학교 및 초등학교 단어 처리
# == 초등학교, 초교 --> '초'로 변경 / (특수) 등의 문자를 없애줌
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초등학교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"(특수)","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주분원","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주","")
# 신호등 정보에 결측치 제거, ""으로 된 공백 데이터도 제거
lamp_info <- lamp_info %>% filter(!is.na('교차로')) # 결측치 제거
lamp_info <- lamp_info %>% filter(lamp_info$'교차로'!="") #공백 데이터도 제거
#사고 데이터를 스쿨존 단위로 집계
data_acc <- accident %>% group_by(지점명) %>% summarise(cnt_a = sum(발생건수),cnt_d = sum(사망자수))
head(data_acc)
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
lamp_info$'교차로'
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
lamp_info$'교차로'
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
lamp_info$'교차로'
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
i <- 1  # 신호등 정보 벡터의 인덱스
for (zone in zones){
lamp[i] = ifelse(lamp_info %>% filter(str_detect(교차로, zone)) %>% nrow > 0, 'Y','N')
i <- i+1
}
zone_info2$'신호등' <- lamp # 스쿨존 정보에 '신호등' 컬럼으로 설정
head(zone_info2)
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
zone_info2$'지역구'
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
i <- 1  # 벡터의 인덱스
acci = c()
dead = c()
for (zone in zones){
area = areas[i]
row <- data_acc[str_detect(data_acc$지점명, zone) & str_detect(data_acc$지점명, area),]
if(count(row)>0){
acci[i] <- sum(row$cnt_a)
dead[i] <- sum(row$cnt_d)
}
else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
zone_info2$'지역구'
head(zone_info2$'지역구')
head(zone_info2$'지역구', 6)
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
head(zone_info2$'지역구')
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
i <- 1  # 벡터의 인덱스
acci = c()
dead = c()
for (zone in zones){
area = areas[i]
row <- data_acc[str_detect(data_acc$지점명, zone) & str_detect(data_acc$지점명, area),]
if(count(row)>0){
acci[i] <- sum(row$cnt_a)
dead[i] <- sum(row$cnt_d)
}
else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
lamp_info$'교차로'
head(zone_info2)
# lamp_info$'교차로'
head(lanp_info)
# lamp_info$'교차로'
head(lamp_info)
library(ggplot2)
library(dplyr)
library(corrplot)
library(readxl)
library(stringr) # 문자열 처리를 위한 라이브러리
#################################
# 1. 데이터 불러오기
#################################
accident <-read.csv("12_19_schoolzone.csv", header=T, stringsAsFactors=F)
zone_info <-read.csv("충청북도_청주시_어린이보호구역_20200717_1594961127925_45579.csv", header=T, stringsAsFactors=F)
lamp_info <-read.csv("충청북도_청주시_신호등정보_20191007.csv", header=T, stringsAsFactors=F)
# 전국 스쿨존 사고 중 청주 데이터만 추출 "청주"가 들어있는 데이터만 추출
accident <- accident[str_detect(accident$"시도시군구명",'청주'),]
accident
View(accident)
head(accident)
head(zone_info2)
head(accident)
# 스쿨존 중복 정보 제거 (ex) 초등학교 부설 유치원
# == 소재지지번주소가 같은 것을 중복으로 보고 하나만 남김
zone_info2 = zone_info[-which(duplicated(zone_info$"소재지지번주소")),]
head(zone_info2)
# 특수학교 및 초등학교 단어 처리
# == 초등학교, 초교 --> '초'로 변경 / (특수) 등의 문자를 없애줌
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초등학교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"초교","초")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"(특수)","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주분원","")
zone_info2$'대상시설명' <- str_replace(zone_info2$'대상시설명',"청주","")
# 신호등 정보에 결측치 제거, ""으로 된 공백 데이터도 제거
lamp_info <- lamp_info %>% filter(!is.na('교차로')) # 결측치 제거
lamp_info <- lamp_info %>% filter(lamp_info$'교차로'!="") #공백 데이터도 제거
#사고 데이터를 스쿨존 단위로 집계
data_acc <- accident %>% group_by(지점명) %>% summarise(cnt_a = sum(발생건수),cnt_d = sum(사망자수))
head(data_acc)
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
head(zones)
zones
# 1) 스쿨존 정보에 신호등 컬럼 추가
# == for 문 사용하여 각 스쿨존에 해당하는 신호등(교차로) 정보가 있는지 확인하여
# == 신호등(교차로) 정보가 있으면 'Y'을, 없으면 'N'을 값으로 스쿨존 정보에 넣음
zones <- zone_info2$'대상시설명'
# lamp_info$'교차로'
head(lamp_info)
lamp <- c() # 신호등 정보 Y, N을 담을 벡터
i <- 1  # 신호등 정보 벡터의 인덱스
for (zone in zones){
lamp[i] = ifelse(lamp_info %>% filter(str_detect(교차로, zone)) %>% nrow > 0, 'Y','N')
i <- i+1
}
zone_info2$'신호등' <- lamp # 스쿨존 정보에 '신호등' 컬럼으로 설정
head(zone_info2)
# 2) 스쿨존 정보에 지역구 컬럼 추가
# == 스쿨존의 소재지도로명 주소에 있는 구을 바탕으로 지역구를 설정함
zone_info2$'지역구' <- ifelse(str_detect(zone_info2$'소재지도로명주소','상당구'),'상당구',
ifelse(str_detect(zone_info2$'소재지도로명주소','서원구'),'서원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','청원구'),'청원구',
ifelse(str_detect(zone_info2$'소재지도로명주소','흥덕구'),'흥덕구','기타'))))
# zone_info2$'지역구'
head(zone_info2)
# 3) 스쿨존 정보에 사고 발생건수, 사망자 컬럼 추가
# == for문을 돌면서 해당스쿨존에 해당하는 사고의 발생건수, 사망자를 조사하여 컬럼 정보를 만든다
# == for문을 돌면서 index 정보를 활용하여 새로운 컬럼과 기존의 스쿨존 정보의 인덱스를 맞춘다.
areas <- zone_info2$'지역구'
zones <- zone_info2$'대상시설명'
i <- 1  # 벡터의 인덱스
acci = c()
dead = c()
for (zone in zones){
area = areas[i]
row <- data_acc[str_detect(data_acc$지점명, zone) & str_detect(data_acc$지점명, area),]
if(count(row)>0){
acci[i] <- sum(row$cnt_a)
dead[i] <- sum(row$cnt_d)
}
else{
acci[i] <- 0
dead[i] <- 0
}
# print(paste(zone,area,acci[i],dead[i]))
i <- i+1
}
zone_info2$'발생건수' <- acci  # 스쿨존 정보에 '발생건수' 컬럼으로 설정
zone_info2$'사망자수' <- dead  # 스쿨존 정보에 '사망자수' 컬럼으로 설정
str(zone_info2)
write.csv(zone_info2, file="cj_schoolzone_Data2.csv")
